import os
import fitz  # PyMuPDF
import spacy

# Load spaCy model
nlp = spacy.load("en_core_web_sm")

# Define input and output folders
input_folder = 'FolderA'
output_folder = 'FolderB'

if not os.path.exists(output_folder):
    os.makedirs(output_folder)

def mask_pii(text, entities):
    """Mask PII in the given text."""
    masked_text = text
    for ent in entities:
        masked_text = masked_text.replace(ent.text, '...')
    return masked_text

def extract_entities(text):
    """Extract entities using spaCy."""
    doc = nlp(text)
    return [ent for ent in doc.ents if ent.label_ in ['PERSON', 'GPE', 'LOC']]

def process_pdfs(input_folder, output_folder):
    """Process PDF files to mask PII and save to a new folder."""
    for filename in os.listdir(input_folder):
        if filename.endswith('.pdf'):
            input_path = os.path.join(input_folder, filename)
            output_path = os.path.join(output_folder, filename)
            
            # Open the PDF
            pdf_document = fitz.open(input_path)
            
            # Iterate through the pages
            for page_num in range(pdf_document.page_count):
                page = pdf_document[page_num]
                text_instances = page.search_for(" ")
                
                for inst in text_instances:
                    text = page.get_text("text", clip=inst)
                    entities = extract_entities(text)
                    masked_text = mask_pii(text, entities)
                    page.insert_textbox(inst, masked_text, fontname="helv", fontsize=12)
            
            # Save the modified PDF to the output folder
            pdf_document.save(output_path)
            pdf_document.close()

# Process all PDFs in the input folder
process_pdfs(input_folder, output_folder)
